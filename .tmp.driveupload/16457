{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamid\\\\OneDrive\\\\Bureau\\\\__React\\\\Salary_Mangement\\\\management\\\\src\\\\Section\\\\Progress\\\\Progress.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Progres, SecWallper } from \"../../Components\";\nimport \"./Progress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = () => {\n  _s();\n  const [data, setData] = useState(0);\n  const [expensesTotale, setExpensesTotale] = useState(0);\n  const [totalMontent, setTotalMontent] = useState(0);\n  const [percentageExpense, setPercentageExpense] = useState(0);\n  const speed = 100;\n\n  // get All Data \n  useEffect(() => {\n    fetch(\"http://localhost:9000/dataManagement\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  //   get totale Montonte\n  // useEffect(() => {\n  //     if (data) {\n  //       const totalMontent = data.reduce((total, item) => {\n  //         return total + parseInt(item.montant);\n  //       }, 0);\n  //       setTotalMontent(totalMontent);\n  //     }\n  //   }, [data]);\n\n  // get total expensse\n  useEffect(() => {\n    if (data) {\n      const expensesTotal = data.reduce((total, item) => {\n        return item.type === \"expense\" ? total + parseInt(item.montant) : total;\n      }, 0);\n      setExpensesTotale(expensesTotal);\n    }\n  }, [data]);\n\n  // Calculating percentage function for expense total\n  useEffect(() => {\n    const percentExpense = 100 * expensesTotale / totalMontent;\n    setPercentageExpense(percentExpense);\n  }, [expensesTotale, totalMontent]);\n  useEffect(() => {\n    let progresStartValue = 0;\n    const interval = setInterval(() => {\n      progresStartValue++;\n      setExpensesTotale(progresStartValue);\n      if (progresStartValue >= percentageExpense) {\n        clearInterval(interval);\n      }\n    }, speed);\n  }, [percentageExpense]);\n  return /*#__PURE__*/_jsxDEV(SecWallper, {\n    title: \"Progress\",\n    children: /*#__PURE__*/_jsxDEV(Progres, {\n      progresValue: expensesTotale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Progress, \"mgQIe+SBHhClrKw0Y+/1jfeowNw=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["useEffect","useState","Progres","SecWallper","jsxDEV","_jsxDEV","Progress","_s","data","setData","expensesTotale","setExpensesTotale","totalMontent","setTotalMontent","percentageExpense","setPercentageExpense","speed","fetch","then","res","json","expensesTotal","reduce","total","item","type","parseInt","montant","percentExpense","progresStartValue","interval","setInterval","clearInterval","title","children","progresValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hamid/OneDrive/Bureau/__React/Salary_Mangement/management/src/Section/Progress/Progress.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Progres, SecWallper } from \"../../Components\"\r\nimport \"./Progress.css\"\r\n\r\nconst Progress = () => {\r\n    const [data, setData] = useState(0);\r\n    const [expensesTotale, setExpensesTotale] = useState(0);\r\n    const [totalMontent, setTotalMontent] = useState(0);\r\n    const [percentageExpense, setPercentageExpense] = useState(0)\r\n    const speed = 100;\r\n\r\n    // get All Data \r\n    useEffect(() => {\r\n        fetch(\"http://localhost:9000/dataManagement\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setData(data);\r\n          });\r\n      }, []);\r\n\r\n    //   get totale Montonte\r\n    // useEffect(() => {\r\n    //     if (data) {\r\n    //       const totalMontent = data.reduce((total, item) => {\r\n    //         return total + parseInt(item.montant);\r\n    //       }, 0);\r\n    //       setTotalMontent(totalMontent);\r\n    //     }\r\n    //   }, [data]);\r\n\r\n    // get total expensse\r\n    useEffect(() => {\r\n        if (data) {\r\n          const expensesTotal = data.reduce((total, item) => {\r\n            return item.type === \"expense\" ? total + parseInt(item.montant) : total;\r\n          }, 0);\r\n          setExpensesTotale(expensesTotal);\r\n        }\r\n      }, [data]);\r\n\r\n    // Calculating percentage function for expense total\r\n    useEffect(() => {\r\n        const percentExpense = ((100 * expensesTotale) / totalMontent );\r\n        setPercentageExpense(percentExpense);\r\n    }, [expensesTotale, totalMontent]);\r\n\r\n    useEffect(() => {\r\n        let progresStartValue = 0;\r\n        const interval = setInterval(() => {\r\n            progresStartValue++;\r\n            setExpensesTotale(progresStartValue);\r\n            if(progresStartValue >= percentageExpense) {\r\n                clearInterval(interval);\r\n            }\r\n        }, speed);\r\n      \r\n    }, [percentageExpense]);\r\n\r\n    return(\r\n        <SecWallper title = \"Progress\">\r\n            <Progres progresValue={expensesTotale}/>\r\n        </SecWallper>\r\n    )\r\n}\r\n\r\nexport default Progress"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMe,KAAK,GAAG,GAAG;;EAEjB;EACAhB,SAAS,CAAC,MAAM;IACZiB,KAAK,CAAC,sCAAsC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEV,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAR,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,EAAE;MACR,MAAMa,aAAa,GAAGb,IAAI,CAACc,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;QACjD,OAAOA,IAAI,CAACC,IAAI,KAAK,SAAS,GAAGF,KAAK,GAAGG,QAAQ,CAACF,IAAI,CAACG,OAAO,CAAC,GAAGJ,KAAK;MACzE,CAAC,EAAE,CAAC,CAAC;MACLZ,iBAAiB,CAACU,aAAa,CAAC;IAClC;EACF,CAAC,EAAE,CAACb,IAAI,CAAC,CAAC;;EAEZ;EACAR,SAAS,CAAC,MAAM;IACZ,MAAM4B,cAAc,GAAK,GAAG,GAAGlB,cAAc,GAAIE,YAAc;IAC/DG,oBAAoB,CAACa,cAAc,CAAC;EACxC,CAAC,EAAE,CAAClB,cAAc,EAAEE,YAAY,CAAC,CAAC;EAElCZ,SAAS,CAAC,MAAM;IACZ,IAAI6B,iBAAiB,GAAG,CAAC;IACzB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BF,iBAAiB,EAAE;MACnBlB,iBAAiB,CAACkB,iBAAiB,CAAC;MACpC,IAAGA,iBAAiB,IAAIf,iBAAiB,EAAE;QACvCkB,aAAa,CAACF,QAAQ,CAAC;MAC3B;IACJ,CAAC,EAAEd,KAAK,CAAC;EAEb,CAAC,EAAE,CAACF,iBAAiB,CAAC,CAAC;EAEvB,oBACIT,OAAA,CAACF,UAAU;IAAC8B,KAAK,EAAG,UAAU;IAAAC,QAAA,eAC1B7B,OAAA,CAACH,OAAO;MAACiC,YAAY,EAAEzB;IAAe;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAErB,CAAC;AAAAhC,EAAA,CA3DKD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}