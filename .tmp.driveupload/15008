{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamid\\\\OneDrive\\\\Bureau\\\\__React\\\\Salary_Mangement\\\\management\\\\src\\\\Section\\\\Progress\\\\Progress.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Progres, SecWallper } from \"../../Components\";\nimport \"./Progress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = () => {\n  _s();\n  const [data, setData] = useState(0);\n  const [expensesTotale, setExpensesTotale] = useState(0);\n  const [totalMontent, setTotalMontent] = useState(0);\n  const [percentageExpense, setPercentageExpense] = useState(0);\n  const [totalRevenue, setTotalRevenue] = useState(0);\n  const [percentageRevenue, setPercentageRevenue] = useState(0);\n\n  // get All Data \n  useEffect(() => {\n    fetch(\"http://localhost:9000/dataManagement\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  // get totale Montonte\n  useEffect(() => {\n    if (data) {\n      const totalMontent = data.reduce((total, item) => {\n        return total + parseInt(item.montant);\n      }, 0);\n      setTotalMontent(totalMontent);\n    }\n  }, [data]);\n\n  // get total expensse\n  useEffect(() => {\n    if (data) {\n      const expensesTotal = data.reduce((total, item) => {\n        return item.type === \"expense\" ? total + parseInt(item.montant) : total;\n      }, 0);\n      setExpensesTotale(expensesTotal);\n    }\n  }, [data]);\n\n  // Calculating percentage function for expense total\n  useEffect(() => {\n    const percentExpense = 100 * expensesTotale / totalMontent;\n    setPercentageExpense(percentExpense);\n  }, [expensesTotale, totalMontent]);\n\n  // get totale \n  useEffect(() => {\n    if (data) {\n      const totalRevenue = data.reduce((total, item) => {\n        return item.type === \"income\" ? total + parseInt(item.montant) : total;\n      }, 0);\n      setPercentageRevenue(totalRevenue);\n    }\n  }, [data]);\n\n  // Calculating percentage function for Revenu total\n  useEffect(() => {\n    const percentRevenue = 100 * percentageRevenue / totalMontent;\n    setPercentageRevenue(percentRevenue);\n  }, [percentageRevenue, totalMontent]);\n  return /*#__PURE__*/_jsxDEV(SecWallper, {\n    title: \"Progress\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: totalMontent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(Progres, {\n        progresValue: percentageExpense.toFixed(2),\n        percentExpenseDeg: percentageExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Progres, {\n        progresValue: percentageRevenue.toFixed(2),\n        percentExpenseDeg: percentageRevenue.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Progress, \"7iNzShqBf0ob+kyCbI61V3uRwg4=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["useEffect","useState","Progres","SecWallper","jsxDEV","_jsxDEV","Progress","_s","data","setData","expensesTotale","setExpensesTotale","totalMontent","setTotalMontent","percentageExpense","setPercentageExpense","totalRevenue","setTotalRevenue","percentageRevenue","setPercentageRevenue","fetch","then","res","json","reduce","total","item","parseInt","montant","expensesTotal","type","percentExpense","percentRevenue","title","children","fileName","_jsxFileName","lineNumber","columnNumber","className","progresValue","toFixed","percentExpenseDeg","_c","$RefreshReg$"],"sources":["C:/Users/Hamid/OneDrive/Bureau/__React/Salary_Mangement/management/src/Section/Progress/Progress.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Progres, SecWallper } from \"../../Components\"\r\nimport \"./Progress.css\"\r\n\r\nconst Progress = () => {\r\n    const [data, setData] = useState(0);\r\n    const [expensesTotale, setExpensesTotale] = useState(0);\r\n    const [totalMontent, setTotalMontent] = useState(0);\r\n    const [percentageExpense, setPercentageExpense] = useState(0)\r\n    const [totalRevenue, setTotalRevenue] = useState(0);\r\n    const [percentageRevenue, setPercentageRevenue] = useState(0);\r\n\r\n    // get All Data \r\n    useEffect(() => {\r\n        fetch(\"http://localhost:9000/dataManagement\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setData(data);\r\n          });\r\n      }, []);\r\n\r\n    // get totale Montonte\r\n    useEffect(() => {\r\n        if (data) {\r\n          const totalMontent = data.reduce((total, item) => {\r\n            return total + parseInt(item.montant);\r\n          }, 0);\r\n          setTotalMontent(totalMontent);\r\n        }\r\n      }, [data]);\r\n\r\n    // get total expensse\r\n    useEffect(() => {\r\n        if (data) {\r\n          const expensesTotal = data.reduce((total, item) => {\r\n            return item.type === \"expense\" ? total + parseInt(item.montant) : total;\r\n          }, 0);\r\n          setExpensesTotale(expensesTotal);\r\n        }\r\n      }, [data]);\r\n\r\n    // Calculating percentage function for expense total\r\n    useEffect(() => {\r\n        const percentExpense = ((100 * expensesTotale) / totalMontent );\r\n        setPercentageExpense(percentExpense);\r\n    }, [expensesTotale, totalMontent]);\r\n\r\n    // get totale \r\n    useEffect(() => {\r\n      if (data) {\r\n        const totalRevenue = data.reduce((total, item) => {\r\n          return item.type === \"income\" ? total + parseInt(item.montant) : total;\r\n        }, 0);\r\n        setPercentageRevenue(totalRevenue);\r\n      }\r\n    }, [data]);\r\n\r\n    // Calculating percentage function for Revenu total\r\n    useEffect(() => {\r\n      const percentRevenue = ((100 * percentageRevenue) / totalMontent );\r\n      setPercentageRevenue(percentRevenue);\r\n  }, [percentageRevenue, totalMontent]);\r\n\r\n    return(\r\n        <SecWallper title=\"Progress\">\r\n          <h2>{totalMontent}</h2>\r\n          <div className=\"d-flex\">\r\n            <Progres progresValue={percentageExpense.toFixed(2)} percentExpenseDeg={percentageExpense}/>\r\n            <Progres progresValue={percentageRevenue.toFixed(2)} percentExpenseDeg={percentageRevenue.toFixed(2)}/>\r\n          </div>\r\n        </SecWallper>\r\n    )\r\n}\r\n\r\nexport default Progress"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}