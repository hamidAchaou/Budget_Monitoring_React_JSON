{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamid\\\\OneDrive\\\\Bureau\\\\__React\\\\Salary_Mangement\\\\management\\\\src\\\\Section\\\\Progress\\\\Progress.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Progres, SecWallper } from \"../../Components\";\nimport \"./Progress.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = () => {\n  _s();\n  const [data, setData] = useState(0);\n  const [expensesTotale, setExpensesTotale] = useState(0);\n  const [totalMontent, setTotalMontent] = useState(0);\n  const speed = 100;\n\n  // get All Data\n  useEffect(() => {\n    fetch(\"http://localhost:9000/dataManagement\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  // get total Montonte\n  useEffect(() => {\n    if (data) {\n      const totalMontent = data.reduce((total, item) => {\n        return total + parseInt(item.montant);\n      }, 0);\n      setTotalMontent(totalMontent);\n    }\n  }, [data]);\n\n  // function calculate total expense\n  useEffect(() => {\n    if (data && totalMontent !== 0) {\n      const expensesTotal = data.reduce((total, item) => {\n        return item.type === \"expense\" ? total + parseInt(item.montant) : total;\n      }, 0);\n      setExpensesTotale(prevExpensesTotale => 100 * expensesTotal / totalMontent);\n    }\n  }, [data, totalMontent]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setExpensesTotale(prevExpensesTotale => prevExpensesTotale + 1);\n    }, speed);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SecWallper, {\n    title: \"Progress\",\n    children: /*#__PURE__*/_jsxDEV(Progres, {\n      progresValue: expensesTotale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Progress, \"n6toFtAVUtEAcp1qlt4/U5qqOfc=\");\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["useEffect","useState","Progres","SecWallper","jsxDEV","_jsxDEV","Progress","_s","data","setData","expensesTotale","setExpensesTotale","totalMontent","setTotalMontent","speed","fetch","then","res","json","reduce","total","item","parseInt","montant","expensesTotal","type","prevExpensesTotale","interval","setInterval","clearInterval","title","children","progresValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hamid/OneDrive/Bureau/__React/Salary_Mangement/management/src/Section/Progress/Progress.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Progres, SecWallper } from \"../../Components\";\r\nimport \"./Progress.css\";\r\n\r\nconst Progress = () => {\r\n  const [data, setData] = useState(0);\r\n  const [expensesTotale, setExpensesTotale] = useState(0);\r\n  const [totalMontent, setTotalMontent] = useState(0);\r\n  const speed = 100;\r\n\r\n  // get All Data\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:9000/dataManagement\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  // get total Montonte\r\n  useEffect(() => {\r\n    if (data) {\r\n      const totalMontent = data.reduce((total, item) => {\r\n        return total + parseInt(item.montant);\r\n      }, 0);\r\n      setTotalMontent(totalMontent);\r\n    }\r\n  }, [data]);\r\n\r\n  // function calculate total expense\r\n  useEffect(() => {\r\n    if (data && totalMontent !== 0) {\r\n      const expensesTotal = data.reduce((total, item) => {\r\n        return item.type === \"expense\" ? total + parseInt(item.montant) : total;\r\n      }, 0);\r\n      setExpensesTotale(prevExpensesTotale => ((100 * expensesTotal) / totalMontent ));\r\n    }\r\n  }, [data, totalMontent]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setExpensesTotale(prevExpensesTotale => prevExpensesTotale + 1 );\r\n    }, speed);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <SecWallper title=\"Progress\">\r\n      <Progres progresValue={expensesTotale} />\r\n    </SecWallper>\r\n  );\r\n};\r\n\r\nexport default Progress;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMa,KAAK,GAAG,GAAG;;EAEjB;EACAd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,sCAAsC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAER,IAAI,IAAK;MACdC,OAAO,CAACD,IAAI,CAAC;IACf,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAR,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACR,MAAMI,YAAY,GAAGJ,IAAI,CAACW,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;QAChD,OAAOD,KAAK,GAAGE,QAAQ,CAACD,IAAI,CAACE,OAAO,CAAC;MACvC,CAAC,EAAE,CAAC,CAAC;MACLV,eAAe,CAACD,YAAY,CAAC;IAC/B;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;;EAEV;EACAR,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,IAAII,YAAY,KAAK,CAAC,EAAE;MAC9B,MAAMY,aAAa,GAAGhB,IAAI,CAACW,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAK;QACjD,OAAOA,IAAI,CAACI,IAAI,KAAK,SAAS,GAAGL,KAAK,GAAGE,QAAQ,CAACD,IAAI,CAACE,OAAO,CAAC,GAAGH,KAAK;MACzE,CAAC,EAAE,CAAC,CAAC;MACLT,iBAAiB,CAACe,kBAAkB,IAAM,GAAG,GAAGF,aAAa,GAAIZ,YAAc,CAAC;IAClF;EACF,CAAC,EAAE,CAACJ,IAAI,EAAEI,YAAY,CAAC,CAAC;EAExBZ,SAAS,CAAC,MAAM;IACd,MAAM2B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCjB,iBAAiB,CAACe,kBAAkB,IAAIA,kBAAkB,GAAG,CAAE,CAAC;IAClE,CAAC,EAAEZ,KAAK,CAAC;IAET,OAAO,MAAMe,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAACF,UAAU;IAAC2B,KAAK,EAAC,UAAU;IAAAC,QAAA,eAC1B1B,OAAA,CAACH,OAAO;MAAC8B,YAAY,EAAEtB;IAAe;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEjB,CAAC;AAAC7B,EAAA,CAhDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}